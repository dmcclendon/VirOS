#!/bin/bash
#
#############################################################################
#
# findoverlay: early init tool to set up LiveOS persistence overlay device
#
#############################################################################
#
# Copyright 2007 Douglas McClendon <dmc AT filteredperception DOT org>
#
#############################################################################
#
#This file is part of VirOS.
#
#    VirOS is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    VirOS is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with VirOS.  If not, see <http://www.gnu.org/licenses/>.
#
#############################################################################

#set -o verbose

# the overlay option value is pulled by init's parsing of /proc/cmdline
overlay=$1
loopdev=$2
rloopdev=$3
debug=$4

function fodebug {
    if ((${debug})); then
	echo "findoverlay: $*"
    fi
}

fodebug "starting..."

# get the (safe)label and uuid of the live media
# /dev/root is still the cdrom/usb at this point in time
LIVEOS_SAFELABEL=$( /lib/udev/vol_id -l /dev/root )
LIVEOS_UUID=$( /lib/udev/vol_id -u /dev/root )

fodebug "LiveOS SAFELABEL-UUID is ${LIVEOS_SAFELABEL}-${LIVEOS_UUID}"

# calculate pathspec from overlay option, i.e. stuff following the ':'
if ( echo $overlay | grep -q ":" ); then
    # pathspec specified, extract
    pathspec=$( echo $overlay | sed -e 's/^.*://' )
else
    # no pathspec specified, set default
    pathspec="/LiveOS/overlay-${LIVEOS_SAFELABEL}-${LIVEOS_UUID}"
fi

# handle special formats of pathspec
if [ "x${pathspec}" == "x" -o "${pathspec}" == "auto" ]; then
    # empty or auto pathspec specified, set to default
    pathspec="/LiveOS/overlay-${LIVEOS_SAFELABEL}-${LIVEOS_UUID}"
elif ( echo $pathspec | grep -v -q "/" ); then
    # no leading slash implies prepending of default
    pathspec="/LiveOS/overlay-${LIVEOS_SAFELABEL}-${LIVEOS_UUID}-${pathspec}"
fi

fodebug "calculated pathspec is ${pathspec}"

# calculate devspec from overlay option, i.e. stuff preceding the ':'
devspec=$( echo $overlay | sed -e 's/:.*$//' )
if [ ! -n "$devspec" ]; then
    # no devspec, revert to default of auto
    devspec="auto"
fi

fodebug "calculated devspec is ${devspec}"

# load filesystem modules that may be required for overlay
# TODO: only load these conditionally if /lib/udev/vol_id detects a fs that needs them
#       or find out if they are autoloaded autmatically 

# for typical vfat on usbstick
# testing autoload
#modprobe vfat
# for typical ntfs on usbstick or host disk
#modprobe fuse
# for typical ext3
# assumption: ext3 is already loaded

# check if devspec is auto
numcandidates=0
candidates=""
if [ "$devspec" == "auto" ]; then
    echo "findoverlay auto is not currently supported!!!"
    exit 1
else
    # specific devspec given
    
    # normalize devicename
    #
    # devspec may be of the following forms:
    #
    # /dev/sda1             # normalized form
    # sda1
    # LABEL=MyLABEL
    # UUID=MyUUID
    if ( echo $devspec | grep -q "^UUID=" ); then
	cuuid=$( echo $devspec | sed -e 's/^UUID=//' )
	pdev=$( findfs UUID=${cuuid} )
    elif ( echo $devspec | grep -q "^LABEL=" ); then
	clabel=$( echo $devspec | sed -e 's/^LABEL=//' )
	pdev=$( findfs LABEL=${clabel} )
    elif ( echo $devspec | grep -q '/' ); then
	pdev=$devspec
    else
	pdev="/dev/${devspec}"
    fi
fi

# now that we have the normalized reference to the persistence device
# set it up
# remove leading and trailing whitespace, perhaps unnecessary
pdev=$( echo $pdev | sed -e 's/^\s*//' | sed -e 's/\s*$//' )
fodebug "persistence device is: $pdev"
pmounted=0
if ( blockdev $pdev > /dev/null 2>&1 ); then
    fodebug "about to mount persistence device $pdev on /mnt/overlayfs"
    mount -n -t auto $pdev /mnt/overlayfs
    fodebug "persistence device $pdev mounted on /mnt/overlayfs"
    pmounted=1
fi

if [ -w "/mnt/overlayfs${pathspec}" ]; then
    fodebug "setting up overlay file"
    losetup ${loopdev} /mnt/overlayfs${pathspec}
    losetup -r ${rloopdev} /mnt/overlayfs${pathspec}
# todo- perhaps implement this and below notes
#    date > /mnt/.LiveOS/overlayfs${pathspec}.inuse
else
    echo "findoverlay: failed to find usable overlay image, setting up non-persistenct ram overlay, sleeping 77 seconds so you can read this"
    # ugly way to emphasize this failure case to the user
    sleep 77
#
# OPEN DM-SNAPSHOT BUG (BUG#4XXXXX)
#
    if ( grep -q nobwa /proc/cmdline ); then
	mount -n -t tmpfs -o mode=0755 none /mnt/overlayfs  
    fi

    dd if=/dev/null of=/mnt/overlayfs/overlay \
	bs=1024 count=1 seek=$((512*1024)) 2> /dev/null
    losetup ${loopdev} /mnt/overlayfs/overlay
    losetup -r ${rloopdev} /mnt/overlayfs/overlay
fi

