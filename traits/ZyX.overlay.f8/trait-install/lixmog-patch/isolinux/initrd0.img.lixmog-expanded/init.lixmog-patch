--- init.orig	2007-12-07 20:30:37.000000000 -0600
+++ init.patched	2008-01-11 06:03:04.000000000 -0600
@@ -45,6 +45,7 @@
 live_ram=0
 check_iso=0
 live_locale=""
+overlay="off"
 
 # Parse kernel commandline options
 #
@@ -74,6 +75,12 @@
     live_locale=*)
         live_locale=${o#live_locale=}
         ;;
+    overlay)
+        overlay=auto
+        ;;
+    overlay=*)
+        overlay=${o#overlay=}
+        ;;
     check)
         check_iso=1
         ;;
@@ -382,9 +389,42 @@
 # live cd helper function
 do_live_from_base_loop() {
     # create a sparse file for the overlay
-    dd if=/dev/null of=/overlay bs=1024 count=1 seek=524288 2> /dev/null
+###    dd if=/dev/null of=/overlay bs=1024 count=1 seek=524288 2> /dev/null
     OVERLAY_LOOPDEV=$( losetup -f )
-    losetup $OVERLAY_LOOPDEV /overlay
+###    losetup $OVERLAY_LOOPDEV /overlay
+
+    touch /fakefile
+    losetup $OVERLAY_LOOPDEV /fakefile
+    OVERLAY_READONLY_LOOPDEV=$( losetup -f )
+    losetup -d $OVERLAY_LOOPDEV
+    rm -f /fakefile
+
+    # create a sparse file for the overlay
+    # overlay: if non-ram overlay searching is desired, do it,
+    #              otherwise, create traditional overlay in ram
+    mkdir -p /mnt/overlayfs
+
+    if (($quiet)); then
+	fo_opt_verbose=0
+    else
+	fo_opt_verbose=1
+    fi
+
+    if [ "x${overlay}" != "xoff" ]; then
+        /sbin/findoverlay \
+	    "$overlay" \
+	    "$OVERLAY_LOOPDEV" \
+	    "$OVERLAY_READONLY_LOOPDEV" \
+	    $fo_opt_verbose
+    else
+	# open bug #4XXXXXX
+	if ( grep -q nobwa /proc/cmdline ); then
+            mount -n -t tmpfs -o mode=0755 none /mnt/overlayfs
+	fi
+        dd if=/dev/null of=/mnt/overlayfs/overlay bs=1024 count=1 seek=$((512*1024)) 2> /dev/null
+        losetup $OVERLAY_LOOPDEV /mnt/overlayfs/overlay
+        losetup -r $OVERLAY_READONLY_LOOPDEV /mnt/overlayfs/overlay
+    fi
 
     # set up the snapshot
     echo 0 `blockdev --getsize $BASE_LOOPDEV` snapshot $BASE_LOOPDEV $OVERLAY_LOOPDEV p 8 | dmsetup create live-rw
@@ -394,6 +434,7 @@
     ln -s /dev/mapper/live-rw /dev/root
 
     mount -n -t ext3 /dev/mapper/live-rw /sysroot
+
     # here you can modify the rw ext3 fs for testing if you don't want to
     # respin the entire rootfs (which takes ages). Example
     #
@@ -441,6 +482,16 @@
     fi
     echo "KERNEL==\"${BASE_LOOPDEV#/dev/}\" SYMLINK+=\"live-osimg\"" >> /sysroot/etc/udev/rules.d/50-udev*
     echo "KERNEL==\"${OVERLAY_LOOPDEV#/dev/}\" SYMLINK+=\"live-overlay\"" >> /sysroot/etc/udev/rules.d/50-udev*
+    echo "KERNEL==\"${OVERLAY_READONLY_LOOPDEV#/dev/}\" SYMLINK+=\"live-overlay-readonly\"" >> /sysroot/etc/udev/rules.d/50-udev*
+
+    # move overlay mount
+    mkdir -p /sysroot/mnt/overlayfs
+    if ( mount -n --move /mnt/overlayfs /sysroot/mnt/overlayfs > /dev/null 2>&1 ); then
+	echo "/mnt/overlayfs" >> /dev/.fstab.live.special
+#	echo "status: overlayfs mountpoint was moved"
+#    else
+#	echo "status: overlayfs mountpoint was not moved"
+    fi
 
     mount -n -o ro,remount /sysroot
 }
@@ -454,11 +505,11 @@
     # decompress the delta data
     dd if=$OSMINSQFS of=/osmin.img 2> /dev/null
     OSMIN_SQUASHED_LOOPDEV=$( losetup -f )
-    losetup $OSMIN_SQUASHED_LOOPDEV /osmin.img
+    losetup -r $OSMIN_SQUASHED_LOOPDEV /osmin.img
     mkdir -p /squashfs.osmin
     mount -n -t squashfs -o ro $OSMIN_SQUASHED_LOOPDEV /squashfs.osmin
     OSMIN_LOOPDEV=$( losetup -f )
-    losetup $OSMIN_LOOPDEV /squashfs.osmin/osmin
+    losetup -r $OSMIN_LOOPDEV /squashfs.osmin/osmin
     umount -l /squashfs.osmin
 fi
 
@@ -478,7 +529,7 @@
     modprobe dm_snapshot
 
     BASE_LOOPDEV=$( losetup -f )
-    losetup $BASE_LOOPDEV $EXT3FS
+    losetup -r $BASE_LOOPDEV $EXT3FS
     umount -l /sysroot
 
     do_live_from_base_loop
@@ -511,12 +562,12 @@
     fi
 
     SQUASHED_LOOPDEV=$( losetup -f )
-    losetup $SQUASHED_LOOPDEV $SQUASHED
+    losetup -r $SQUASHED_LOOPDEV $SQUASHED
     mkdir -p /squashfs
     mount -n -t squashfs -o ro $SQUASHED_LOOPDEV /squashfs
 
     BASE_LOOPDEV=$( losetup -f )
-    losetup $BASE_LOOPDEV /squashfs/LiveOS/ext3fs.img
+    losetup -r $BASE_LOOPDEV /squashfs/LiveOS/ext3fs.img
     
     umount -l /squashfs
     if [ "$live_ram" == "0" ] ; then
@@ -532,6 +583,51 @@
     echo "0 $( blockdev --getsize $BASE_LOOPDEV ) snapshot $BASE_LOOPDEV $OSMIN_LOOPDEV p 8" | dmsetup create --readonly live-osimg-min
 fi
 
+#
+# if not previously applied, apply a patch to the shutdown scripts so 
+# they don't try to unmount the live overlay filesystem before the rootfs
+#
+# this is horrendously ugly on multiple levels.
+#
+# technically all the selinux crap should be conditional upon both
+# the presence of /sysroot/etc/selinux/config and its contents grep 
+# matching ^SELINUX=enforcing or ^SELINUX=permissive
+#
+# But ALL of this if clause will be ripped out 
+if [ "x${overlay}" != "xoff" ]; then
+    if [ ! -f /sysroot/etc/rc.d/init.d/halt.f8p_patched ]; then
+
+	mount -n -o remount,rw /sysroot
+	pushd /sysroot/var/tmp >> /sysroot/var/log/LiveOS.log 2>&1
+	mkdir -p /selinux >> /sysroot/var/log/LiveOS.log 2>&1
+	mkdir -p /tmp >> /sysroot/var/log/LiveOS.log 2>&1
+	mkdir -p /etc/selinux/targeted >> /sysroot/var/log/LiveOS.log 2>&1
+	/sysroot/bin/cp -av /sysroot/etc/selinux/targeted/policy /etc/selinux/targeted >> /sysroot/var/log/LiveOS.log 2>&1
+	mount -n -t selinuxfs selinuxfs /selinux >> /sysroot/var/log/LiveOS.log 2>&1
+	/sysroot/usr/sbin/load_policy >> /sysroot/var/log/LiveOS.log 2>&1
+	/sysroot/usr/sbin/setenforce Permissive >> /sysroot/var/log/LiveOS.log 2>&1
+	
+	echo "LiveOS initramfs patching /etc/rc.d/init.d/halt" >> /sysroot/var/log/LiveOS.log        
+	/sysroot/bin/mv /sysroot/etc/rc.d/init.d/halt /sysroot/etc/rc.d/init.d/halt.f8p_patched >> /sysroot/var/log/LiveOS.log 2>&1
+	/sysroot/bin/mv /etc_rc.d_init.d_halt.patched /sysroot/etc/rc.d/init.d/halt >> /sysroot/var/log/LiveOS.log 2>&1
+	/sysroot/usr/bin/chcon --user system_u --role object_r --type initrc_exec_t /sysroot/etc/rc.d/init.d/functions >> /sysroot/var/log/LiveOS.log 2>&1
+	
+	echo "LiveOS initramfs patching /etc/rc.d/init.d/functions" >> /sysroot/var/log/LiveOS.log        
+	/sysroot/bin/mv /sysroot/etc/rc.d/init.d/functions /sysroot/etc/rc.d/init.d/functions.f8p_patched >> /sysroot/var/log/LiveOS.log 2>&1
+	/sysroot/bin/mv /etc_rc.d_init.d_functions.patched /sysroot/etc/rc.d/init.d/functions >> /sysroot/var/log/LiveOS.log 2>&1
+	/sysroot/usr/bin/chcon --user system_u --role object_r --type bin_t /sysroot/etc/rc.d/init.d/functions >> /sysroot/var/log/LiveOS.log 2>&1
+	
+    # oh how I loathe SELinux, let me count the ways...
+    # (if this is really necessary - I think it is - I suspect it is due to the mounting touching fstab ??? )
+	/sysroot/usr/bin/chcon --user system_u --role object_r --type etc_t /sysroot/etc/fstab >> /sysroot/var/log/LiveOS.log 2>&1
+	
+	umount -n -t selinuxfs /selinux
+	popd >> /sysroot/var/log/LiveOS.log 2>&1
+	
+	mount -n -o remount,ro /sysroot
+    fi
+fi
+
 if [ "$eshell" == "1" ] ; then
     echo "Shell requested on kernel commandline."
     echo "Rootfs is mounted ro on /sysroot. Exit to continue booting."
